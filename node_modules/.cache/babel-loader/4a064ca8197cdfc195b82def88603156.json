{"ast":null,"code":"import _asyncToGenerator from \"/root/dex/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/root/dex/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/root/dex/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _regeneratorRuntime from \"/root/dex/frontend/node_modules/@babel/runtime/regenerator/index.js\";\nimport EventEmitter from \"eventemitter3\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport { HttpConnection } from \"@walletconnect/jsonrpc-http-connection\";\nimport { getRpcUrl, signingMethods } from \"@walletconnect/utils\";\nimport { SignerConnection } from \"@walletconnect/signer-connection\";\n\nvar WalletConnectProvider = /*#__PURE__*/function () {\n  function WalletConnectProvider(opts) {\n    _classCallCheck(this, WalletConnectProvider);\n\n    this.events = new EventEmitter();\n    this.rpc = {\n      infuraId: opts === null || opts === void 0 ? void 0 : opts.infuraId,\n      custom: opts === null || opts === void 0 ? void 0 : opts.rpc\n    };\n    this.signer = new JsonRpcProvider(new SignerConnection(opts));\n    var chainId = this.signer.connection.chainId || (opts === null || opts === void 0 ? void 0 : opts.chainId) || 1;\n    this.http = this.setHttpProvider(chainId);\n    this.registerEventListeners();\n  }\n\n  _createClass(WalletConnectProvider, [{\n    key: \"connected\",\n    get: function get() {\n      return this.signer.connection.connected;\n    }\n  }, {\n    key: \"connector\",\n    get: function get() {\n      return this.signer.connection.connector;\n    }\n  }, {\n    key: \"accounts\",\n    get: function get() {\n      return this.signer.connection.accounts;\n    }\n  }, {\n    key: \"chainId\",\n    get: function get() {\n      return this.signer.connection.chainId;\n    }\n  }, {\n    key: \"rpcUrl\",\n    get: function get() {\n      var _a;\n\n      return ((_a = this.http) === null || _a === void 0 ? void 0 : _a.connection).url || \"\";\n    }\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(args) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = args.method;\n                _context.next = _context.t0 === \"eth_requestAccounts\" ? 3 : _context.t0 === \"eth_accounts\" ? 6 : _context.t0 === \"eth_chainId\" ? 7 : 8;\n                break;\n\n              case 3:\n                _context.next = 5;\n                return this.connect();\n\n              case 5:\n                return _context.abrupt(\"return\", this.signer.connection.accounts);\n\n              case 6:\n                return _context.abrupt(\"return\", this.signer.connection.accounts);\n\n              case 7:\n                return _context.abrupt(\"return\", this.signer.connection.chainId);\n\n              case 8:\n                return _context.abrupt(\"break\", 9);\n\n              case 9:\n                if (!signingMethods.includes(args.method)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.signer.request(args));\n\n              case 11:\n                if (!(typeof this.http === \"undefined\")) {\n                  _context.next = 13;\n                  break;\n                }\n\n                throw new Error(\"Cannot request JSON-RPC method (\".concat(args.method, \") without provided rpc url\"));\n\n              case 13:\n                return _context.abrupt(\"return\", this.http.request(args));\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function request(_x) {\n        return _request.apply(this, arguments);\n      }\n\n      return request;\n    }()\n  }, {\n    key: \"sendAsync\",\n    value: function sendAsync(args, callback) {\n      this.request(args).then(function (response) {\n        return callback(null, response);\n      }).catch(function (error) {\n        return callback(error, undefined);\n      });\n    }\n  }, {\n    key: \"enable\",\n    value: function () {\n      var _enable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.request({\n                  method: \"eth_requestAccounts\"\n                });\n\n              case 2:\n                accounts = _context2.sent;\n                return _context2.abrupt(\"return\", accounts);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function enable() {\n        return _enable.apply(this, arguments);\n      }\n\n      return enable;\n    }()\n  }, {\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (this.signer.connection.connected) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                _context3.next = 3;\n                return this.signer.connect();\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n\n      return connect;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this.signer.connection.connected) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                _context4.next = 3;\n                return this.signer.disconnect();\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n\n      return disconnect;\n    }()\n  }, {\n    key: \"on\",\n    value: function on(event, listener) {\n      this.events.on(event, listener);\n    }\n  }, {\n    key: \"once\",\n    value: function once(event, listener) {\n      this.events.once(event, listener);\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(event, listener) {\n      this.events.removeListener(event, listener);\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, listener) {\n      this.events.off(event, listener);\n    }\n  }, {\n    key: \"isWalletConnect\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"registerEventListeners\",\n    value: function registerEventListeners() {\n      var _this = this;\n\n      this.signer.connection.on(\"accountsChanged\", function (accounts) {\n        _this.events.emit(\"accountsChanged\", accounts);\n      });\n      this.signer.connection.on(\"chainChanged\", function (chainId) {\n        _this.http = _this.setHttpProvider(chainId);\n\n        _this.events.emit(\"chainChanged\", chainId);\n      });\n      this.signer.on(\"disconnect\", function () {\n        _this.events.emit(\"disconnect\");\n      });\n    }\n  }, {\n    key: \"setHttpProvider\",\n    value: function setHttpProvider(chainId) {\n      var rpcUrl = getRpcUrl(chainId, this.rpc);\n      if (typeof rpcUrl === \"undefined\") return undefined;\n      var http = new JsonRpcProvider(new HttpConnection(rpcUrl));\n      return http;\n    }\n  }]);\n\n  return WalletConnectProvider;\n}();\n\nexport default WalletConnectProvider;","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import EventEmitter from \"eventemitter3\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport { HttpConnection } from \"@walletconnect/jsonrpc-http-connection\";\nimport { getRpcUrl, signingMethods } from \"@walletconnect/utils\";\nimport { SignerConnection } from \"@walletconnect/signer-connection\";\nclass WalletConnectProvider {\n    constructor(opts) {\n        this.events = new EventEmitter();\n        this.rpc = { infuraId: opts === null || opts === void 0 ? void 0 : opts.infuraId, custom: opts === null || opts === void 0 ? void 0 : opts.rpc };\n        this.signer = new JsonRpcProvider(new SignerConnection(opts));\n        const chainId = this.signer.connection.chainId || (opts === null || opts === void 0 ? void 0 : opts.chainId) || 1;\n        this.http = this.setHttpProvider(chainId);\n        this.registerEventListeners();\n    }\n    get connected() {\n        return this.signer.connection.connected;\n    }\n    get connector() {\n        return this.signer.connection.connector;\n    }\n    get accounts() {\n        return this.signer.connection.accounts;\n    }\n    get chainId() {\n        return this.signer.connection.chainId;\n    }\n    get rpcUrl() {\n        var _a;\n        return ((_a = this.http) === null || _a === void 0 ? void 0 : _a.connection).url || \"\";\n    }\n    async request(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n                await this.connect();\n                return this.signer.connection.accounts;\n            case \"eth_accounts\":\n                return this.signer.connection.accounts;\n            case \"eth_chainId\":\n                return this.signer.connection.chainId;\n            default:\n                break;\n        }\n        if (signingMethods.includes(args.method)) {\n            return this.signer.request(args);\n        }\n        if (typeof this.http === \"undefined\") {\n            throw new Error(`Cannot request JSON-RPC method (${args.method}) without provided rpc url`);\n        }\n        return this.http.request(args);\n    }\n    sendAsync(args, callback) {\n        this.request(args)\n            .then(response => callback(null, response))\n            .catch(error => callback(error, undefined));\n    }\n    async enable() {\n        const accounts = await this.request({ method: \"eth_requestAccounts\" });\n        return accounts;\n    }\n    async connect() {\n        if (!this.signer.connection.connected) {\n            await this.signer.connect();\n        }\n    }\n    async disconnect() {\n        if (this.signer.connection.connected) {\n            await this.signer.disconnect();\n        }\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    get isWalletConnect() {\n        return true;\n    }\n    registerEventListeners() {\n        this.signer.connection.on(\"accountsChanged\", accounts => {\n            this.events.emit(\"accountsChanged\", accounts);\n        });\n        this.signer.connection.on(\"chainChanged\", chainId => {\n            this.http = this.setHttpProvider(chainId);\n            this.events.emit(\"chainChanged\", chainId);\n        });\n        this.signer.on(\"disconnect\", () => {\n            this.events.emit(\"disconnect\");\n        });\n    }\n    setHttpProvider(chainId) {\n        const rpcUrl = getRpcUrl(chainId, this.rpc);\n        if (typeof rpcUrl === \"undefined\")\n            return undefined;\n        const http = new JsonRpcProvider(new HttpConnection(rpcUrl));\n        return http;\n    }\n}\nexport default WalletConnectProvider;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}