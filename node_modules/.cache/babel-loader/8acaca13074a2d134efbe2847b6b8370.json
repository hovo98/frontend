{"ast":null,"code":"import _asyncToGenerator from \"/root/dex/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/root/dex/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/root/dex/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/root/dex/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/root/dex/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _regeneratorRuntime from \"/root/dex/frontend/node_modules/@babel/runtime/regenerator/index.js\";\nimport { EventEmitter } from \"events\";\nimport { IJsonRpcProvider, isJsonRpcResponse, formatJsonRpcRequest, isJsonRpcError } from \"@walletconnect/jsonrpc-utils\";\nexport var JsonRpcProvider = /*#__PURE__*/function (_IJsonRpcProvider) {\n  _inherits(JsonRpcProvider, _IJsonRpcProvider);\n\n  var _super = _createSuper(JsonRpcProvider);\n\n  function JsonRpcProvider(connection) {\n    var _this;\n\n    _classCallCheck(this, JsonRpcProvider);\n\n    _this = _super.call(this, connection);\n    _this.events = new EventEmitter();\n    _this.hasRegisteredEventListeners = false;\n    _this.connection = _this.setConnection(connection);\n\n    if (_this.connection.connected) {\n      _this.registerEventListeners();\n    }\n\n    return _this;\n  }\n\n  _createClass(JsonRpcProvider, [{\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var connection,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                connection = _args.length > 0 && _args[0] !== undefined ? _args[0] : this.connection;\n                _context.next = 3;\n                return this.open(connection);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n\n      return connect;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.close();\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n\n      return disconnect;\n    }()\n  }, {\n    key: \"on\",\n    value: function on(event, listener) {\n      this.events.on(event, listener);\n    }\n  }, {\n    key: \"once\",\n    value: function once(event, listener) {\n      this.events.once(event, listener);\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, listener) {\n      this.events.off(event, listener);\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(event, listener) {\n      this.events.removeListener(event, listener);\n    }\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_request, context) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this.requestStrict(formatJsonRpcRequest(_request.method, _request.params || []), context));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function request(_x, _x2) {\n        return _request2.apply(this, arguments);\n      }\n\n      return request;\n    }()\n  }, {\n    key: \"requestStrict\",\n    value: function () {\n      var _requestStrict = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(request, context) {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(resolve, reject) {\n                    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            if (_this2.connection.connected) {\n                              _context4.next = 9;\n                              break;\n                            }\n\n                            _context4.prev = 1;\n                            _context4.next = 4;\n                            return _this2.open();\n\n                          case 4:\n                            _context4.next = 9;\n                            break;\n\n                          case 6:\n                            _context4.prev = 6;\n                            _context4.t0 = _context4[\"catch\"](1);\n                            reject(_context4.t0);\n\n                          case 9:\n                            _this2.events.on(\"\".concat(request.id), function (response) {\n                              if (isJsonRpcError(response)) {\n                                reject(response.error.message);\n                              } else {\n                                resolve(response.result);\n                              }\n                            });\n\n                            _context4.prev = 10;\n                            _context4.next = 13;\n                            return _this2.connection.send(request, context);\n\n                          case 13:\n                            _context4.next = 18;\n                            break;\n\n                          case 15:\n                            _context4.prev = 15;\n                            _context4.t1 = _context4[\"catch\"](10);\n                            reject(_context4.t1);\n\n                          case 18:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    }, _callee4, null, [[1, 6], [10, 15]]);\n                  }));\n\n                  return function (_x5, _x6) {\n                    return _ref.apply(this, arguments);\n                  };\n                }()));\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function requestStrict(_x3, _x4) {\n        return _requestStrict.apply(this, arguments);\n      }\n\n      return requestStrict;\n    }()\n  }, {\n    key: \"setConnection\",\n    value: function setConnection() {\n      var connection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.connection;\n      return connection;\n    }\n  }, {\n    key: \"onPayload\",\n    value: function onPayload(payload) {\n      this.events.emit(\"payload\", payload);\n\n      if (isJsonRpcResponse(payload)) {\n        this.events.emit(\"\".concat(payload.id), payload);\n      } else {\n        this.events.emit(\"message\", {\n          type: payload.method,\n          data: payload.params\n        });\n      }\n    }\n  }, {\n    key: \"open\",\n    value: function () {\n      var _open = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var connection,\n            _args6 = arguments;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                connection = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : this.connection;\n\n                if (!(this.connection === connection && this.connection.connected)) {\n                  _context6.next = 3;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\");\n\n              case 3:\n                if (this.connection.connected) this.close();\n\n                if (!(typeof connection === \"string\")) {\n                  _context6.next = 8;\n                  break;\n                }\n\n                _context6.next = 7;\n                return this.connection.open(connection);\n\n              case 7:\n                connection = this.connection;\n\n              case 8:\n                this.connection = this.setConnection(connection);\n                _context6.next = 11;\n                return this.connection.open();\n\n              case 11:\n                this.registerEventListeners();\n                this.events.emit(\"connect\");\n\n              case 13:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function open() {\n        return _open.apply(this, arguments);\n      }\n\n      return open;\n    }()\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.connection.close();\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function close() {\n        return _close.apply(this, arguments);\n      }\n\n      return close;\n    }()\n  }, {\n    key: \"registerEventListeners\",\n    value: function registerEventListeners() {\n      var _this3 = this;\n\n      if (this.hasRegisteredEventListeners) return;\n      this.connection.on(\"payload\", function (payload) {\n        return _this3.onPayload(payload);\n      });\n      this.connection.on(\"close\", function () {\n        return _this3.events.emit(\"disconnect\");\n      });\n      this.connection.on(\"error\", function (error) {\n        return _this3.events.emit(\"error\", error);\n      });\n      this.hasRegisteredEventListeners = true;\n    }\n  }]);\n\n  return JsonRpcProvider;\n}(IJsonRpcProvider);\nexport default JsonRpcProvider;","map":{"version":3,"sources":["../../src/provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { EventEmitter } from \"events\";\nimport { IJsonRpcProvider, isJsonRpcResponse, formatJsonRpcRequest, isJsonRpcError, } from \"@walletconnect/jsonrpc-utils\";\nexport class JsonRpcProvider extends IJsonRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new EventEmitter();\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    async connect(connection = this.connection) {\n        await this.open(connection);\n    }\n    async disconnect() {\n        await this.close();\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    async request(request, context) {\n        return this.requestStrict(formatJsonRpcRequest(request.method, request.params || []), context);\n    }\n    async requestStrict(request, context) {\n        return new Promise(async (resolve, reject) => {\n            if (!this.connection.connected) {\n                try {\n                    await this.open();\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }\n            this.events.on(`${request.id}`, response => {\n                if (isJsonRpcError(response)) {\n                    reject(response.error.message);\n                }\n                else {\n                    resolve(response.result);\n                }\n            });\n            try {\n                await this.connection.send(request, context);\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if (isJsonRpcResponse(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    async open(connection = this.connection) {\n        if (this.connection === connection && this.connection.connected)\n            return;\n        if (this.connection.connected)\n            this.close();\n        if (typeof connection === \"string\") {\n            await this.connection.open(connection);\n            connection = this.connection;\n        }\n        this.connection = this.setConnection(connection);\n        await this.connection.open();\n        this.registerEventListeners();\n        this.events.emit(\"connect\");\n    }\n    async close() {\n        await this.connection.close();\n    }\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", () => this.events.emit(\"disconnect\"));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexport default JsonRpcProvider;\n//# sourceMappingURL=provider.js.map"]},"metadata":{},"sourceType":"module"}